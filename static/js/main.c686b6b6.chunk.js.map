{"version":3,"sources":["components/source.js","components/sources.js","components/year-select.js","components/form-group.js","components/author-form.js","components/author-form-group.js","components/editForm.js","components/sourceOptions.js","components/selectForm.js","App.js","serviceWorker.js","index.js"],"names":["Source","_this$props$source","this","props","source","title","authors","publisher","year","length","_authors$","firstName","lastName","react_default","a","createElement","_authors","Object","slicedToArray","author1","author2","_authors$2","React","Component","Sources","id","key","style","listStyleType","sources","map","components_source","YearSelect","_this","years","i","push","className","onChange","e","changeProp","target","value","FormGroup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","name","toUpperCase","slice","_this$props","htmlFor","titleCase","year_select","type","required","AuthorForm","state","author","index","changeAuthor","event","_this2","_event$target","setState","prevState","newAuthor","placeholder","Authors","onEdit","author_form","EditForm","uuid","v4","numAuthors","onClick","arr","num","parseInt","defineProperty","preventDefault","onSubmit","author_form_group","form_group","sourceOption","selectForm","selectedSource","filter","console","log","removeSource","onInput","selectSource","sourceOptions","App","addSource","newSource","react_router_dom","basename","components_sources","editForm","components_selectForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c686b6b6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Source extends React.Component{\r\n    render(){\r\n        const {title, authors, publisher, year} = this.props.source;\r\n\r\n        if(authors.length === 1){\r\n            const {firstName, lastName} = authors[0];\r\n\r\n            return (\r\n                <li>\r\n                    {lastName}, {firstName}. <cite>{title}</cite>. {publisher}, {year}.\r\n                </li>\r\n            )\r\n        }else if(authors.length === 2){\r\n            const [author1, author2] = authors;\r\n            \r\n            return (\r\n                <li>\r\n                    {author1.lastName}, {author1.firstName} and {author2.firstName} {author2.lastName}. <cite>{title}</cite>. {publisher}, {year}.\r\n                </li>\r\n            )\r\n        }else{\r\n            const {firstName, lastName} = authors[0];\r\n\r\n            return (\r\n                <li>\r\n                    {lastName}, {firstName} et al. <cite>{title}</cite>. {publisher}, {year}.\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Source;","import React from 'react';\r\nimport Source from './source';\r\n\r\nclass Sources extends React.Component{\r\n    render(){\r\n        return (\r\n            <ul id=\"sources\" key=\"sources\" style={{listStyleType:'none'}}>\r\n                {this.props.sources.map(source => \r\n                    <Source source ={source} key={source.id}/>\r\n                )}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sources;","import React, { Component } from 'react';\r\n\r\nclass YearSelect extends Component{ \r\n    render() {\r\n        const years = [];\r\n\r\n        for(let i = 2019; i > 1899; i--){\r\n            years.push(i)\r\n        }\r\n        \r\n        return (\r\n            <select \r\n                className=\"form-control\" \r\n                id=\"yearSelect\"\r\n                onChange={(e) => \r\n                    this.props.changeProp('year', e.target.value)}>  \r\n                    {years.map(year => \r\n                        (<option \r\n                            key={year}>\r\n                                {year}\r\n                        </option>)\r\n                    )}\r\n            </select>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default YearSelect;","import React, { Component } from 'react';\r\nimport YearSelect from './year-select';\r\n\r\nclass FormGroup extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.onChange = this.props.onChange.bind(this)\r\n    }\r\n\r\n    titleCase(name){\r\n        return name[0].toUpperCase() + name.slice(1, name.length)\r\n    }\r\n    render() {\r\n        const {name, value}= this.props;\r\n\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name} \r\n                    className=\"col-form-label\">\r\n                    {this.titleCase(name)}\r\n                </label>\r\n                \r\n                {name === 'year' ?\r\n                    <YearSelect changeProp={this.onChange}/> :\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\" \r\n                        name={name} \r\n                        value = {value}\r\n                        onChange={this.onChange}\r\n                        required></input>                \r\n                }\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormGroup;","import React, { Component } from 'react';\r\n//import uuid from 'uuid';\r\n\r\nclass AuthorForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.author.id,\r\n            firstName: this.props.author.firstName,\r\n            lastName: this.props.author.lastName,\r\n            index: this.props.index\r\n        }\r\n\r\n        this.changeAuthor = this.changeAuthor.bind(this);\r\n    }\r\n\r\n    \r\n    changeAuthor(event){\r\n        const {name, value} = event.target;\r\n        this.setState(prevState =>{\r\n            const newAuthor = {\r\n                id: this.state.id,\r\n                firstName: name === 'firstName' ? value : prevState.firstName,\r\n                lastName: name === 'lastName' ? value : prevState.lastName\r\n            }\r\n            \r\n            this.props.changeAuthor(newAuthor, this.state.index);\r\n            return newAuthor;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (             \r\n            <div className=\"author\">\r\n                <label>Author</label>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" \r\n                                name= 'firstName'\r\n                                className=\"form-control\" \r\n                                placeholder=\"First name\" \r\n                                onChange={this.changeAuthor}\r\n                        />\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" \r\n                                name = 'lastName'\r\n                                className=\"form-control\" \r\n                                placeholder=\"Last name\" \r\n                                onChange={this.changeAuthor}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AuthorForm;","import React, { Component } from 'react';\r\nimport AuthorForm from './author-form';\r\n\r\nclass Authors extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            authors: this.props.authors\r\n        }\r\n\r\n        this.changeAuthor = this.props.onEdit.bind(this);\r\n\r\n    }  \r\n\r\n    render() {  \r\n        return (\r\n            <div className=\"author-group\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"num-authors\">Authors:</label>\r\n                        <select className=\"form-control\" onChange={this.props.onChange}>\r\n                            <option value=\"1\">One</option>\r\n                            <option value=\"2\">Two</option>\r\n                            <option value=\"3\">Three or more</option>\r\n                        </select>\r\n                    </div>\r\n                    <div id=\"author-form\">\r\n                        {this.props.authors.map((author, index) => \r\n                            <AuthorForm key={index} author={author}\r\n                                changeAuthor={this.changeAuthor}\r\n                                index={index}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Authors;","import React, { Component } from 'react';\r\nimport FormGroup from './form-group';\r\nimport AuthorFormGroup from './author-form-group';\r\nimport uuid from 'uuid';\r\n\r\nclass EditForm extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            id: uuid.v4(),\r\n            authors: [\r\n                {\r\n                    id: uuid.v4(),\r\n                    firstName: '',\r\n                    lastName: ''\r\n                }\r\n            ],\r\n            title: '',\r\n            publisher: '',\r\n            year: 2000\r\n        }\r\n\r\n        this.changeProp = this.changeProp.bind(this)\r\n        this.numAuthors = this.numAuthors.bind(this)\r\n        this.changeAuthor = this.changeAuthor.bind(this)\r\n        this.onClick = this.onClick.bind(this)\r\n    }\r\n    \r\n    numAuthors(event){\r\n        let arr = [], num = parseInt(event.target.value);\r\n        \r\n        while(num > 0){\r\n            arr.push({\r\n                id: uuid.v4(),\r\n                firstName: '',\r\n                lastName: ''\r\n            });\r\n            num--;\r\n        }\r\n        this.setState({authors: arr});\r\n\r\n    }\r\n\r\n    changeAuthor(newAuthor, index){\r\n        this.setState(prevState => {\r\n            prevState.authors[index] = newAuthor;\r\n            return prevState;\r\n        })\r\n    }\r\n\r\n    changeProp(event){\r\n        const {name, value} = event.target;\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    onClick(e){\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state)\r\n        this.setState({\r\n            id: uuid.v4(),\r\n            authors: [\r\n                {\r\n                    id: uuid.v4(),\r\n                    firstName: '',\r\n                    lastName: ''\r\n                }\r\n            ],\r\n            title: '',\r\n            publisher: '',\r\n            year: 2000\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <form className=\"col-12 col-md-6\" id=\"source-form\"\r\n                        onSubmit={this.onClick}>\r\n                <AuthorFormGroup authors = {this.state.authors} \r\n                    onChange={this.numAuthors}\r\n                    onEdit={this.changeAuthor}\r\n                />\r\n                <hr></hr>\r\n                <FormGroup name=\"title\" \r\n                    value={this.state.title}\r\n                    onChange={this.changeProp}\r\n                    />\r\n                <FormGroup name=\"publisher\"\r\n                    value={this.state.publisher}\r\n                    onChange={this.changeProp}\r\n                    />\r\n                <FormGroup name=\"year\"\r\n                    value={this.state.year}\r\n                    onChange={this.changeProp}\r\n                    />\r\n                <input type=\"submit\" \r\n                        className=\"btn btn-primary\" \r\n                        value=\"Submit\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditForm;","import  React, { Component } from 'react';\r\n\r\nclass sourceOption extends Component {\r\n    render() {        \r\n        const {id, authors, title} = this.props.source;\r\n        const {firstName, lastName} = authors[0];\r\n\r\n        return (\r\n            <option value={id}>\r\n                {title} by {firstName} {lastName} {authors.length === 1 ? ' ' : 'et al'}\r\n            </option>\r\n        );\r\n    }\r\n}\r\n\r\nexport default sourceOption;","import React, { Component } from 'react';\r\nimport SourceOptions from './sourceOptions';\r\n\r\nclass selectForm extends Component {\r\n        state = {\r\n            selectedSource: this.props.sources[0]\r\n        };\r\n\r\n        editSource(e){\r\n            e.preventDefault();\r\n            const id = e.target.value.key;\r\n            let source = this.props.sources.filter(source =>{\r\n                return source.id === id;\r\n            });\r\n            console.log(source);\r\n        }\r\n\r\n        selectSource(e){\r\n            e.preventDefault();\r\n            const id = e.target.value;\r\n            let source = this.props.sources.filter(source =>{\r\n                return source.id === id;\r\n            })[0];\r\n\r\n            this.setState({selectedSource: source});\r\n\r\n        }\r\n\r\n        removeSource(e){\r\n            e.preventDefault();\r\n            this.props.removeSource(this.state.selectedSource.id);\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <form id=\"editPanel\" className=\"col-12 col-md-6 mt-4\">\r\n                    <select id=\"srcOptions\" \r\n                            className=\"form-control mb-2\" \r\n                            onInput={this.selectSource.bind(this)}>\r\n                            {this.props.sources.map(source => \r\n                                <SourceOptions source = {source} key={source.id}/>\r\n                            )}\r\n                    </select>\r\n\r\n                    <input  type=\"submit\" \r\n                            id=\"edit-btn\" \r\n                            className=\"btn btn-primary mr-2\" \r\n                            value=\"Edit Source\" />\r\n\r\n                    <input  type=\"submit\" \r\n                            id=\"remove-btn\" \r\n                            className=\"btn btn-danger\"\r\n                            onClick={this.removeSource.bind(this)}\r\n                            value=\"Remove Source\" />\r\n                </form>\r\n            );\r\n        }\r\n}\r\n\r\nexport default selectForm;","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport uuid from 'uuid';\r\nimport Sources from './components/sources';\r\nimport EditForm from './components/editForm';\r\nimport SelectForm from './components/selectForm';\r\n\r\nclass App extends React.Component { \r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      sources: [\r\n        {\r\n          id: uuid.v4(),\r\n          title: \"You don't know Jack\",\r\n          authors: [\r\n            {\r\n              id: uuid.v4(),\r\n              firstName: \"Jill\",\r\n              lastName: \"Hillard\"\r\n            },\r\n            {\r\n              id: uuid.v4(),\r\n              firstName: \"Little\",\r\n              lastName: \"Miss Muffet\"\r\n            },\r\n            {\r\n              id: uuid.v4(),\r\n              firstName: \"Bo\",\r\n              lastName: \"Peep\"\r\n            }\r\n          ],\r\n          publisher: \"Random House Books\",\r\n          year: 2004\r\n        },\r\n        {\r\n          id: uuid.v4(),\r\n          title: \"Jane Eyre\",\r\n          authors: [\r\n            {\r\n              id: uuid.v4(),\r\n              firstName: \"Charlotte\",\r\n              lastName: \"Bronte\"\r\n            }\r\n          ],\r\n          publisher: \"Thornfield Media\",\r\n          year: 2005\r\n        },\r\n        {\r\n          id: uuid.v4(),\r\n          title: \"Simple CSS\",\r\n          authors: [\r\n            {\r\n              id: uuid.v4(),\r\n              firstName: \"Debbie\",\r\n              lastName: \"Developer\"\r\n            },\r\n            {\r\n              id: uuid.v4(),\r\n              firstName: \"Donnie\",\r\n              lastName: \"Developer\"\r\n            }\r\n          ],\r\n          publisher: \"DevWorld Press\",\r\n          year: 2006\r\n        },\r\n      ]\r\n    };\r\n\r\n    this.removeSource = this.removeSource.bind(this);\r\n    this.addSource = this.addSource.bind(this);\r\n  }\r\n\r\n  removeSource(id){\r\n    this.setState({\r\n      sources: this.state.sources.filter(source => source.id !== id)\r\n    })\r\n  }\r\n\r\n  addSource(newSource){\r\n    this.setState(prevState =>{\r\n      prevState.sources.push(newSource);\r\n      return prevState;\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const {sources} = this.state;\r\n    return (\r\n      <HashRouter basename=\"/\">\r\n        <div id=\"Works\" className=\"container App\">\r\n        <h1 id=\"head\">Works Cited</h1>      \r\n        <Sources sources={sources}/>\r\n        <fieldset className=\"row\">\r\n          <EditForm sources={sources} \r\n            onSubmit = {this.addSource}\r\n          />\r\n          <SelectForm sources={sources} \r\n            removeSource={this.removeSource}\r\n          />        \r\n        </fieldset>\r\n      </div>\r\n    </HashRouter>\r\n    );\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}